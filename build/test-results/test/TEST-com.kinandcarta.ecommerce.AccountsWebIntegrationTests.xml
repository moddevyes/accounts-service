<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.kinandcarta.ecommerce.AccountsWebIntegrationTests" tests="6" skipped="0" failures="0" errors="0" timestamp="2023-09-07T06:59:46" hostname="2NF0VT3" time="0.262">
  <properties/>
  <testcase name="shouldFindAllAddresses_forAccountId()" classname="com.kinandcarta.ecommerce.AccountsWebIntegrationTests" time="0.163"/>
  <testcase name="shouldDeleteAnAccount()" classname="com.kinandcarta.ecommerce.AccountsWebIntegrationTests" time="0.006"/>
  <testcase name="shouldCreateAnAccount_withAddress()" classname="com.kinandcarta.ecommerce.AccountsWebIntegrationTests" time="0.061"/>
  <testcase name="shouldUpdateAnAccount()" classname="com.kinandcarta.ecommerce.AccountsWebIntegrationTests" time="0.01"/>
  <testcase name="shouldFind_AllAccounts()" classname="com.kinandcarta.ecommerce.AccountsWebIntegrationTests" time="0.007"/>
  <testcase name="shouldFindAnAccount_byId()" classname="com.kinandcarta.ecommerce.AccountsWebIntegrationTests" time="0.007"/>
  <system-out><![CDATA[01:59:44.681 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.kinandcarta.ecommerce.AccountsWebIntegrationTests]: AccountsWebIntegrationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
01:59:44.836 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.kinandcarta.ecommerce.AccountsServiceApplication for test class com.kinandcarta.ecommerce.AccountsWebIntegrationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.3)

2023-09-07T01:59:45.658-05:00  INFO 10364 --- [    Test worker] c.k.e.AccountsWebIntegrationTests        : Starting AccountsWebIntegrationTests using Java 17.0.8 with PID 10364 (started by DavidKing in C:\Users\DavidKing\Desktop\GitHub_Projects\accounts-service)
2023-09-07T01:59:45.660-05:00  INFO 10364 --- [    Test worker] c.k.e.AccountsWebIntegrationTests        : No active profile set, falling back to 1 default profile: "default"
2023-09-07T01:59:46.766-05:00  INFO 10364 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-09-07T01:59:46.767-05:00  INFO 10364 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-09-07T01:59:46.769-05:00  INFO 10364 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2023-09-07T01:59:46.800-05:00  INFO 10364 --- [    Test worker] c.k.e.AccountsWebIntegrationTests        : Started AccountsWebIntegrationTests in 1.739 seconds (process running for 5.924)

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /accounts/21/addresses
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.kinandcarta.ecommerce.AccountsController
           Method = com.kinandcarta.ecommerce.AccountsController#findAllAddressesForAccount(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = [{"id":105,"address1":"105 Ood Nutrients Drive","address2":"Suite #105","city":"Ood City","state":"FL","province":"","postalCode":"33000","country":"US"},{"id":100,"address1":"100 Noworries Avenue","address2":"Suite #100","city":"Food Forest City","state":"FL","province":"","postalCode":"33000","country":"US"}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /accounts
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"166"]
             Body = {"id":null,"firstName":"DukeFirstName","lastName":"DukeLastName","emailAddress":"dukefirstlast@duke.com","addresses":null,"createDateTime":null,"updateDateTime":null}
    Session Attrs = {}

Handler:
             Type = com.kinandcarta.ecommerce.AccountsController
           Method = com.kinandcarta.ecommerce.AccountsController#create(Accounts)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /accounts/20
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"164"]
             Body = {"id":20,"firstName":"DukeFirstName","lastName":"DukeLastName","emailAddress":"dukefirstlast@duke.com","addresses":null,"createDateTime":null,"updateDateTime":null}
    Session Attrs = {}

Handler:
             Type = com.kinandcarta.ecommerce.AccountsController
           Method = com.kinandcarta.ecommerce.AccountsController#update(Long, Accounts)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"id":20,"firstName":"DukeFirstName","lastName":"DukeLastName","emailAddress":"dukefirstlast@duke.com","addresses":null,"createDateTime":null,"updateDateTime":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /accounts
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.kinandcarta.ecommerce.AccountsController
           Method = com.kinandcarta.ecommerce.AccountsController#findAll()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = [{"id":null,"firstName":"DukeFirstName","lastName":"DukeLastName","emailAddress":"dukefirstlast@duke.com","addresses":null,"createDateTime":null,"updateDateTime":null}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /accounts/1
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.kinandcarta.ecommerce.AccountsController
           Method = com.kinandcarta.ecommerce.AccountsController#findById(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"id":null,"firstName":"DukeFirstName","lastName":"DukeLastName","emailAddress":"dukefirstlast@duke.com","addresses":null,"createDateTime":null,"updateDateTime":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
